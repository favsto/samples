apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: backend
spec:
  selector:
    tier: backend
    app: microservices-ci
  type: NodePort
  ports:
  - name: be
    port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: backend
  labels:
    tier: backend
    app: microservices-ci
spec:
  replicas: 2
  selector:
    matchLabels:
      tier: backend
      app: microservices-ci
  template:
    metadata:
      labels:
        tier: backend
        app: microservices-ci
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: tier
                  operator: In
                  values:
                  - metadata
              topologyKey: topology.kubernetes.io/zone
      containers:
      - name: backend
        image: europe-west4-docker.pkg.dev/fausto-labs/labs/ms-backend:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "3000m"
            memory: "100M"
          limits:
            cpu: "3000m"
            memory: "200M"
        livenessProbe:
          httpGet:
            path: /hc
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /hc
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 10 
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        ports:
        - containerPort:  8080
          name: be
        env:
        - name: KZ_ENV
          value: "my CI app"
      terminationGracePeriodSeconds: 0